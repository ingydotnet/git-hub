#compdef git-hub -P git\ ##hub
#description perform GitHub operations

# DO NOT EDIT. This file generated by tool/generate-completion.pl.

if [[ -z $GIT_HUB_ROOT ]]; then
	echo 'GIT_HUB_ROOT is null; has `/path/to/git-hub/init` been sourced?'
	return 3
fi

_git-hub() {
    local curcontext="$curcontext" state line
    typeset -A opt_args

    _arguments \
        '1: :->subcmd'\
        '*: :->repo'

    case $state in
    subcmd)
        compadd cache-clear clone collabs comment config config-unset follow followers following follows fork forks git-hub-travis help info irc-enable irc-enable irc-url issue issue-close issue-edit issue-new issue-resolve issues keys keys-add member-add member-get member-remove members notify-list open org org-edit org-get org-members org-repos orgs pr-diff pr-fetch pr-list pr-merge pr-new pr-queue repo repo-delete repo-edit repo-get repo-init repo-new repos scope-add scope-remove scopes setup star starred stars team team-delete team-members team-new team-repo-add team-repos teams token-delete token-get token-new tokens trust unfollow unstar untrust unwatch upgrade url user user-edit user-get version watch watchers watching
    ;;
    collabs|comment|fork|forks|issue|issue-close|issue-edit|issue-new|issue-resolve|issues|open|pr-diff|pr-fetch|pr-list|pr-merge|repo|repo-delete|repo-get|star|stars|trust|unstar|untrust|unwatch|url|watch|watchers)
        re="^(\w+)/(.*)"
        if [[ $words[3] =~ $re ]];
        then
            username="$match[1]"
            if [[ "$username" != "$lastusername" ]];
            then
                lastusername=$username
                reponames=`git hub repos $username --raw`
            fi
            _arguments "2:Repos:($reponames)"
        else
            _arguments "2:Repos:()"
        fi
    ;;
    esac

}

